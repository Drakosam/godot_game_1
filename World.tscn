[gd_scene load_steps=7 format=2]

[ext_resource path="res://Ship_panel.tscn" type="PackedScene" id=1]
[ext_resource path="res://Star_System_panel.tscn" type="PackedScene" id=2]
[ext_resource path="res://Game_Setings.tscn" type="PackedScene" id=3]
[ext_resource path="res://StarSystemsMap.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D


var StarSystam = preload(\"res://StarSystem.tscn\")
var StarLink = preload(\"res://StarLink.tscn\")
var ShipAktor = preload(\"res://ShipAktor.tscn\")

var system_list = []
var star_systems_grid=[]

var dist_x = 80
var dist_y = 50
var base_dist = 15

var board_size_x =0 
var board_size_y =0 

var ship_list = []

func _ready():
	board_size_x = $Game_Setings.SIZE_X
	board_size_y = $Game_Setings.SIZE_Y
	
	$StarSystemsMap.create_board(board_size_x,board_size_y)
	#create_board(board_size_x,board_size_y)
	
	system_list = $StarSystemsMap.get_star_list()
	star_systems_grid = $StarSystemsMap.get_star_grid()
	
	var start_system = star_systems_grid[floor(board_size_y/2) ][floor(board_size_x/2)]
	start_system.make_active()
	$Camera2D.position = start_system.position
	start_system.system_name = \"The Emperor's Haven\"
	start_system.select_system()
	
	
	var new_ship = ShipAktor.instance()
	ship_list.append(new_ship)
	new_ship.spown_ship(start_system,'start ship')
	
	_on_Sys_but_pressed()
	
	
func _hide_panels():
	$CanvasLayer/Star_System_panel.visible = false
	$CanvasLayer/Ship_panel.visible = false
	$StarSystemsMap.visible = false


func _on_Timer_timeout():
	for system in system_list:
		system.act()
	
	for ship in ship_list:
		ship.act()


func _on_Sys_but_pressed():
	_hide_panels()
	$CanvasLayer/Star_System_panel.visible = true
	$StarSystemsMap.visible = true

func _on_Ship_but_pressed():
	_hide_panels()
	$CanvasLayer/Ship_panel.visible = true
	if ship_list.size()>0:
		$CanvasLayer/Ship_panel.set_ship(ship_list[0])


func _on_StarSystemsMap_system_selected(system):
	$CanvasLayer/Star_System_panel.set_system(system)
	
"

[sub_resource type="GDScript" id=2]
script/source = "extends Camera2D


# Declare member variables here. Examples:
# var a = 2
# var b = \"text\"


# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func _unhandled_input(event):
	if event is InputEventMouseMotion:
		if event.button_mask == BUTTON_MASK_MIDDLE:
			position -= event.relative
"

[node name="World" type="Node2D"]
script = SubResource( 1 )

[node name="Game_Setings" parent="." instance=ExtResource( 3 )]

[node name="Camera2D" type="Camera2D" parent="."]
current = true
script = SubResource( 2 )

[node name="StarSystemsMap" parent="." instance=ExtResource( 4 )]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Star_System_panel" parent="CanvasLayer" instance=ExtResource( 2 )]
anchor_left = 1.0
margin_left = -300.0

[node name="Ship_panel" parent="CanvasLayer" instance=ExtResource( 1 )]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 50.0
margin_right = 0.0
margin_bottom = 0.0

[node name="LeftMenu" type="Panel" parent="CanvasLayer"]
anchor_bottom = 1.0
margin_right = 50.0

[node name="VBoxContainer" type="VBoxContainer" parent="CanvasLayer/LeftMenu"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 3.0
margin_top = 5.0
margin_right = -3.0
margin_bottom = -5.0

[node name="Sys_but" type="Button" parent="CanvasLayer/LeftMenu/VBoxContainer"]
margin_right = 44.0
margin_bottom = 44.0
rect_min_size = Vector2( 0, 44 )
text = "sys"

[node name="Ship_but" type="Button" parent="CanvasLayer/LeftMenu/VBoxContainer"]
margin_top = 48.0
margin_right = 44.0
margin_bottom = 92.0
rect_min_size = Vector2( 0, 44 )
text = "ship"

[node name="Timer" type="Timer" parent="."]
wait_time = 0.25
autostart = true

[connection signal="system_selected" from="StarSystemsMap" to="." method="_on_StarSystemsMap_system_selected"]
[connection signal="pressed" from="CanvasLayer/LeftMenu/VBoxContainer/Sys_but" to="." method="_on_Sys_but_pressed"]
[connection signal="pressed" from="CanvasLayer/LeftMenu/VBoxContainer/Ship_but" to="." method="_on_Ship_but_pressed"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
