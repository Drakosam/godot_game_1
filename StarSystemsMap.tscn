[gd_scene load_steps=3 format=2]

[ext_resource path="res://Game_Setings.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

var StarSystam = preload(\"res://StarSystem.tscn\")
var StarLink = preload(\"res://StarLink.tscn\")

var dist_x = 80
var dist_y = 50
var base_dist = 15

var system_list = []
var star_systems_grid=[]

signal system_selected(system)

func _ready():
	pass # Replace with function body.


func get_star_list():
	return system_list
	
func get_star_grid():
	return star_systems_grid

func create_board(size_x,size_y):
	for y in size_y:
		var system_line = []
		for x in size_x:
			var new_system = StarSystam.instance()

			new_system.position = Vector2(base_dist+x*dist_x*2 +dist_x*(y%2),base_dist+y*dist_y*2)
			new_system.connect('clear_selected',self,'clear_system_selected')
			new_system.connect('system_selected',self,'system_selected')
			
			if $Game_Setings.RANDOMIZE_SYSTEM_POSYTION:
				new_system.randomize_posytion(dist_x, dist_y)
			
			system_line.append(new_system)
			system_list.append(new_system)
			
		star_systems_grid.append(system_line)
	
	update_star_links()
	for system in system_list:
		system.make_not_active()
		add_child(system)


func update_star_links():
	for pos_y in len(star_systems_grid):
		for pos_x in len(star_systems_grid[pos_y]) -1:
			var s_link = StarLink.instance()
			var s_sys = star_systems_grid[pos_y][pos_x]
			var e_sys = star_systems_grid[pos_y][pos_x+1]
			
			s_link.set_link(s_sys, e_sys)
			
			s_sys.star_link_e =s_link
			e_sys.star_link_w = s_link
			
			s_sys.star_system_e = e_sys
			e_sys.star_system_w= s_sys
			
			add_child(s_link)
	
	for pos_y in range(1,len(star_systems_grid)) :
		for pos_x in len(star_systems_grid[pos_y]):
			var s_link = StarLink.instance()
			
			
			s_link.set_link(star_systems_grid[pos_y][pos_x],star_systems_grid[pos_y-1][pos_x])
			if pos_y % 2 == 1:
				star_systems_grid[pos_y-1][pos_x].star_link_se = s_link
				star_systems_grid[pos_y][pos_x].star_link_nw =s_link
				
				star_systems_grid[pos_y][pos_x].star_system_nw = star_systems_grid[pos_y-1][pos_x]
				star_systems_grid[pos_y-1][pos_x].star_system_se = star_systems_grid[pos_y][pos_x]
			else:
				star_systems_grid[pos_y-1][pos_x].star_link_sw = s_link
				star_systems_grid[pos_y][pos_x].star_link_ne =s_link
				
				star_systems_grid[pos_y][pos_x].star_system_ne = star_systems_grid[pos_y-1][pos_x]
				star_systems_grid[pos_y-1][pos_x].star_system_sw = star_systems_grid[pos_y][pos_x]
			add_child(s_link)
	
	for pos_y in range(1,len(star_systems_grid)) :
		for pos_x in len(star_systems_grid[pos_y]) -1:
			if pos_y % 2 == 1:
				var s_link = StarLink.instance()
				s_link.set_link(star_systems_grid[pos_y][pos_x],star_systems_grid[pos_y-1][pos_x+1])
				
				star_systems_grid[pos_y][pos_x].star_link_ne =s_link
				star_systems_grid[pos_y-1][pos_x+1].star_link_sw = s_link
				
				star_systems_grid[pos_y][pos_x].star_system_ne = star_systems_grid[pos_y-1][pos_x+1]
				star_systems_grid[pos_y-1][pos_x+1].star_system_sw = star_systems_grid[pos_y][pos_x]
				
				add_child(s_link)

	for pos_y in range(1,len(star_systems_grid)) :
		for pos_x in range(1,len(star_systems_grid[pos_y])):
			if pos_y % 2 == 0:
				var s_link = StarLink.instance()
				s_link.set_link(star_systems_grid[pos_y][pos_x],star_systems_grid[pos_y-1][pos_x-1])
				
				star_systems_grid[pos_y][pos_x].star_link_nw =s_link
				star_systems_grid[pos_y-1][pos_x-1].star_link_se = s_link
				
				star_systems_grid[pos_y][pos_x].star_system_nw = star_systems_grid[pos_y-1][pos_x-1]
				star_systems_grid[pos_y-1][pos_x-1].star_system_se = star_systems_grid[pos_y][pos_x]
				add_child(s_link)


func clear_system_selected():
	for system in system_list:
		system.deselect_system()


func system_selected(system):
	print('xxx')
	emit_signal(\"system_selected\",system)
"

[node name="StarSystemsMap" type="Node2D"]
script = SubResource( 1 )

[node name="Game_Setings" parent="." instance=ExtResource( 1 )]
