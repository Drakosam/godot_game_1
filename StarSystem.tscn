[gd_scene load_steps=3 format=2]

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D

var system_name = \"no_name\"
var is_selcted = false
var is_active = false
var rng = RandomNumberGenerator.new()

var star_link_nw = null
var star_link_ne = null
var star_link_e = null
var star_link_w = null
var star_link_sw = null
var star_link_se = null

var star_system_nw = null
var star_system_ne = null
var star_system_e = null
var star_system_w = null
var star_system_sw = null
var star_system_se = null

var system_size = 17

signal clear_selected()

func _ready():
	$CollisionShape2D.shape.radius = system_size
		

func _draw():
	if not is_active:
		draw_circle(Vector2(0,0),system_size,Color('#000000'))
		return
		
	if is_selcted:
		draw_circle(Vector2(0,0),system_size,Color('#ff0000'))
	else:
		draw_circle(Vector2(0,0),system_size,Color('#ffffff'))
	

func make_active():
	is_active = true
	visible = true
	
	print(star_system_e,star_system_w)
	
	if star_system_nw and star_system_nw.is_active:
		star_link_nw.visible = true
	
	if star_system_ne and star_system_ne.is_active:
		star_link_ne.visible = true
		
	if star_system_e and star_system_e.is_active:
		star_link_e.visible = true
	
	if star_system_w and star_system_w.is_active:
		star_link_w.visible = true
	
	if star_system_se and star_system_se.is_active:
		star_link_se.visible = true
		
	if star_system_sw and star_system_sw.is_active:
		star_link_sw.visible = true
	update()
	
func make_not_active():
	visible = false
	if star_link_nw:
		star_link_nw.visible = false
	if star_link_ne:
		star_link_ne.visible = false
	if star_link_e:
		star_link_e.visible = false
	if star_link_w:
		star_link_w.visible = false
	if star_link_se:
		star_link_se.visible = false
	if star_link_sw:
		star_link_sw.visible = false

func deselect_system():
		is_selcted = false
		update()

func _on_StarSystem_input_event(_viewport, event, _shape_idx):
	if event is InputEventMouseButton and event.pressed:
		emit_signal(\"clear_selected\")
		is_selcted = true
		update()

func randomize_posytion(dis_x,dis_y):
	rng.randomize()
	position.x += rng.randi_range((dis_x-system_size)*(-1), dis_x-system_size)
	position.y += rng.randi_range((dis_y-system_size)*(-1), dis_y-system_size) 

########## public metods
func set_name(new_name):
	system_name = new_name
"

[sub_resource type="CircleShape2D" id=1]

[node name="StarSystem" type="Area2D"]
script = SubResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[connection signal="input_event" from="." to="." method="_on_StarSystem_input_event"]
